doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    title Book Explorer
    script(src="https://cdn.tailwindcss.com")
  body.bg-gray-50
    .container.mx-auto.px-4.py-12.max-w-3xl
      .text-center.mb-12
        h1.text-4xl.font-bold.text-gray-800.mb-4 Welcome to Sarj Book Explorer
        p.text-gray-600.text-lg 
          | Enter a 
          a.text-blue-500(href="https://www.gutenberg.org") Gutenberg
          |  book ID to start reading
      
      .bg-white.rounded-lg.shadow-md.p-8
        form.space-y-4(onsubmit="searchBook(event)")
          .flex.flex-col.space-y-2
            label.text-gray-700.font-medium(for="bookId") Gutenberg Book ID:
            input#bookId.border.rounded-md(
              class="px-4 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              type="text"
              placeholder="Enter book ID (e.g. 1342 for Pride and Prejudice)"
              required
            )
          button(
            type="submit"
            class="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700"
          ) Search Book

        // Add books container
        .mt-8.border-t.pt-8
          h2.text-2xl.font-bold.text-gray-800.mb-4 All Users Search History Books
          div#booksContainer(class="grid gap-6 md:grid-cols-2")
            // Books will be loaded here

      script.
        async function searchBook(e) {
          e.preventDefault();
          const bookId = document.getElementById('bookId').value.trim();
          try {
            const response = await fetch(`/api/books/${bookId}`);
            if (!response.ok) throw new Error('Book not found');
            window.location.href = `/books/${bookId}`;
          } catch (error) {
            alert('Book not found. Please try another ID.');
          }
        }

        // Function to fetch and display books
        async function loadBooks() {
          try {
            const response = await fetch('/api/books');
            const books = await response.json();
            
            const booksContainer = document.getElementById('booksContainer');
            booksContainer.innerHTML = books.map(book => `
              <div class="border rounded-lg overflow-hidden hover:shadow-lg transition-shadow">
                <div class="flex flex-col h-full">
                  ${book.imageUrl ? `
                    <img class="w-full h-48 object-cover" src="${book.imageUrl}" alt="${book.title}">
                  ` : ''}
                  <div class="p-4">
                    <h3 class="font-semibold text-lg mb-2">${book.title}</h3>
                    <p class="text-gray-600 text-sm mb-2">By ${book.author || 'Unknown'}</p>
                    <p class="text-gray-500 text-sm mb-4 line-clamp-3">${book.description}</p>
                    <div class="flex justify-between items-center">
                      <span class="text-gray-600 text-sm">ID: ${book.gutenbergId}</span>
                      <a class="text-blue-600 hover:text-blue-800 font-medium" href="/books/${book.gutenbergId}">
                        View Book â†’
                      </a>
                    </div>
                  </div>
                </div>
              </div>
            `).join('');
          } catch (error) {
            console.error('Error loading books:', error);
          }
        }

        // Load books when the page loads
        document.addEventListener('DOMContentLoaded', loadBooks);